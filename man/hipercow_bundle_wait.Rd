% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bundle.R
\name{hipercow_bundle_wait}
\alias{hipercow_bundle_wait}
\title{Wait for a bundle to complete}
\usage{
hipercow_bundle_wait(
  bundle,
  follow = TRUE,
  timeout = Inf,
  poll = 1,
  fail_early = TRUE,
  progress = NULL,
  root = NULL
)
}
\arguments{
\item{bundle}{Either a \code{hipercow_bundle} object, or the name of a
bundle.}

\item{follow}{Logical, indicating if we should follow any retried
tasks.}

\item{timeout}{The time to wait for the task to complete. The
default is to wait forever.}

\item{poll}{Time, in seconds, used to throttle calls to the status
function. The default is 1 second}

\item{fail_early}{Logical, indicating if we should fail as soon as
the first task has failed.  In this case, the other running
tasks continue running, but we return and indicate that the
final result will not succeed.  If \code{fail_early = FALSE} we keep
running until all tasks have passed or failed, even though we
know we will return \code{FALSE}; but upon return
\code{hipercow_bundle_result()} can be called and all results/errors
returned.}

\item{progress}{Logical value, indicating if a progress spinner
should be used. The default \code{NULL} uses the option
\code{hipercow.progress}, and if unset displays a progress bar in an
interactive session.}

\item{root}{A hipercow root, or path to it. If \code{NULL} we search up
your directory tree.}
}
\value{
A scalar logical value; \code{TRUE} if \emph{all} tasks complete
successfully and \code{FALSE} otherwise
}
\description{
Wait for tasks in a bundle to complete.  This is the
generalisation of \link{task_wait} for a bundle.
}
