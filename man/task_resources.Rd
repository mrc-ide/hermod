% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/resource.R
\name{task_resources}
\alias{task_resources}
\title{Task Resources}
\usage{
task_resources(
  cores = 1L,
  exclusive = FALSE,
  runtime = NULL,
  hold_until = NULL,
  memory_per_node = NULL,
  memory_per_process = NULL,
  requested_nodes = NULL,
  priority = NULL,
  queue = NULL,
  driver = NULL,
  root = NULL
)
}
\arguments{
\item{cores}{The number of cores your task requires. This is 1 by
default. An error is reported if you request more cores than
is available on the largest cluster node. Setting to \code{Inf} will
request any entire node, however many cores it has.}

\item{exclusive}{Set this to \code{TRUE} to ensure no other tasks will be
concurrently run on the node while it runs your task.}

\item{runtime}{Set this to specify a time limit for running your job.
Acceptable formats are either an integer number of minutes, or
characters in the form \code{"m"}, \code{"h:m"}, or \code{"d:h:m"} to optionally
specify days, hours and minutes.}

\item{hold_until}{POSIXt, Date, the special strings "tonight",
"midnight", "weekend" (midnight Saturday morning).

Specify your task should wait in the queue,
rather than start running as soon as possible. Options are, an
integer number of minutes, characters in the form \code{"m"}, or \code{"h:m"}
for hours and minutes, or \code{"tonight"} for 7pm, or \code{"midnight"} for
midnight.}

\item{memory_per_node}{Specify your task can only run on a node
with at least the specified memory. This is an integer,
measured in gigabytes, or strings such as \code{"64Gb"} or \code{"1Tb"}.}

\item{memory_per_process}{If you can provide an estimate of how
much RAM your task requires, then the cluster can ensure the
total memory required by running multiple tasks on a node
does not exceed how much memory the node has. Specify this as
an integer number of gigabytes, or characters such as \code{"10Gb"}}

\item{requested_nodes}{If you have been in touch with us or DIDE
IT, and you need to run your task on a selection of named compute
nodes, then specify this here as a vector of strings for the node names.}

\item{priority}{If the tasks you are launching are low priority, you can
allow other queuing tasks to jump over them, by setting the priority to
to \code{low}; otherwise, the default is \code{normal}. These are the only
acceptable values.}

\item{queue}{Specify a particular queue to submit your tasks to.
This is in development as we decide over time what
queues we best need for DIDE's common workflows. See the Details
for more information}

\item{driver}{The hipercow driver; probably you want this to be
\code{"windows"} as that is all we support at the moment!}

\item{root}{Hipercow root, usually best \code{NULL}}
}
\value{
A hipercow_resource list, which can be specified when running
tasks.
}
\description{
Specify what resources a task requires to run.
}
\section{Windows cluster}{
The windows cluster currently is all 32-core nodes, with RAM
mainly 512Gb, and a few 384Gb.
}

\section{Linux cluster}{
Coming Soon.
}

