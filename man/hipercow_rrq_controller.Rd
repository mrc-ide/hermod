% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rrq.R
\name{hipercow_rrq_controller}
\alias{hipercow_rrq_controller}
\title{Create an rrq controller}
\usage{
hipercow_rrq_controller(..., driver = NULL, root = NULL)
}
\arguments{
\item{...}{Additional arguments passed through to
\code{\link[rrq:rrq_controller2]{rrq::rrq_controller2()}}; currently this is \code{follow} and
\code{timeout_task_wait}.}

\item{driver}{Name of the driver to use.  The default (\code{NULL})
depends on your configured drivers; if you have no drivers
configured we will error as we lack information required to
proceed.  If you have exactly one driver configured we'll submit
your task with it.  If you have more than one driver configured,
then we will error, though in future versions we may fall back
on a default driver if you have one configured.}

\item{root}{A hipercow root, or path to it. If \code{NULL} we search up
your directory tree.}
}
\value{
An \link[rrq:rrq_controller2]{rrq::rrq_controller2} object.
}
\description{
Create an rrq controller for your queue.  Use this to interact
with workers created with \code{\link[=hipercow_rrq_workers_submit]{hipercow_rrq_workers_submit()}}.  Proper
docs forthcoming, all interfaces are subject to some change.
}
\details{
If you are going to do much with the controller after creation,
you probably want to run \code{rrq::rrq_default_controller_set()} with
the return value of this function, as this will mean that you do
not have to add the \code{controller} argument to all other rrq
functions.
}
