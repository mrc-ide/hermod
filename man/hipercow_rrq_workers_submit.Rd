% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rrq.R
\name{hipercow_rrq_workers_submit}
\alias{hipercow_rrq_workers_submit}
\title{Submit rrq workers}
\usage{
hipercow_rrq_workers_submit(
  n,
  driver = NULL,
  resources = NULL,
  envvars = NULL,
  parallel = NULL,
  timeout = NULL,
  progress = NULL,
  root = NULL
)
}
\arguments{
\item{n}{The number of workers to submit. This is the only
required argument.}

\item{driver}{Name of the driver to use.  The default (\code{NULL})
depends on your configured drivers; if you have no drivers
configured we will error as we lack information required to
proceed.  If you have exactly one driver configured we'll submit
your task with it.  If you have more than one driver configured,
then we will error, though in future versions we may fall back
on a default driver if you have one configured.}

\item{resources}{A list generated by \link{hipercow_resources} giving
the cluster resource requirements to run your task.}

\item{envvars}{Environment variables as generated by
\link{hipercow_envvars}, which you might use to control your task.}

\item{parallel}{Parallel configuration as generated by
\link{hipercow_parallel}, which defines which method, if any, will be
used to initialise your worker for parallel execution (which
means you have to think about parallelism at three levels at
least, a diagram may help here).}

\item{timeout}{Time to wait for workers to appear.}

\item{progress}{Should we display a progress bar?}

\item{root}{A hipercow root, or path to it. If \code{NULL} we search up
your directory tree.}
}
\value{
A vector of worker ids
}
\description{
Submit workers to the cluster, use this in conjunction with
\link{hipercow_rrq_controller}.  A worker may sit on a single core or a
whole node depending on how you set up \code{resources}.  We use the
\code{rrq} environment if it exists (\link{hipercow_environment_create})
otherwise we'll use the \code{default} environment.
}
